Week 1 9/24 - 9/30

Looked into and wrote some test code that calls out to a matlab script.
Set up Java Spark server.
Added Mustache Template Engine and a CSS framework, Skeleton.
Added the "/" route to render a template with just a title.
Made sure everything was working ie templates worked and css loaded properly.

Week 2 10/1 - 10/7

Created a form that allowed images to be uploaded to the server.
The server takes the image and places it on disk.
Once the file has uploaded the file name is added to a list on the screen.
The list is draggable/orderable. This will handle the mapping of images to floors.

A screenshot of the current state of the UI after uploading two images and
while dragging a name is in /logs/screenshots/Sarah-Week2.png.

Week 3 10/8 - 10/14

Each time the filenames in the list were dragged the inputs to the form are 
updated to match. When the form is submitted the server gets a list of filenames
in order of floors. Once the server has this list it redirects to a page
that displays all of the images in a column. 

This page asks for two points - the starting and ending points for the path.
Added javascript to translate the two points locations on the image displayed
to points on the full sized image. Once the second point is clicked the data
is sent to the server again. Next week the server will send the two data points
and the order of the floors to the path finding algorithm.

A screenshot of this new screen is in /logs/screenshots/Sarah-Week3.png.
Both images/floors are displayed on that page but the screenshot only shows the
top image/floor.

Week 4 10/15 - 10/21

Created a class that handles creating a string command to run in the terminal/
command line that calls a matlab script with arguments. This passes in the 
data about the points that was collected last week. Also edited the matlab
a little to get the list of file names of all the images in floor order
that have been uploaded. This was difficult because everything wanted to
change and sanitize the string differently and different characters were
allowed in one language that did not work for the other. I spent a lot of time
trying to pass in the list of file names via the command line but I simply
could not figure out how to format the string to let me do that. I unfortunately
gave up on that and wrote out the image filenames/paths to a file that matlab
reads in. I think this week I was also supposed to parse the result from matlab.
We ended up deciding for now that since we were already drawing the path on top
of the images in matlab we would just have matlab save new images with the path
on them (for now we'll see if that is all we want in the future re week 6). All I
ended up having to do was display the newly saved files instead of the uploaded
versions. We also decided that matlab would output the path to a file and output
the places where the images/floors connect also to a file.

Week 5 10/22 - 10/28

Abstracted reading from a file in matlab and loaded the class path on method call.
Filled in the container class with the information javascript would need to update
the page and display the path and the steps. Added gson to handle taking this class
and serializing it to give it to the javascript. Refactored matlab service to use
the container instead of many method parameters. This way anything that needs to
process data before the results are returned can use the same container. Moved some
files around for convenience (js and css to their own folders if they are 3rd party
libraries). Got some scaffolding code that handles moving the points around when
the window resizes. Also added code that generates some "pretty" steps in that there
is a list of strings that should tell someone where to go. This will be improved later
but for now it just generates a list of steps and then displays that on the screen.
It now also swaps out the original image for the one that has the path drawn on it.
Matlab is actually drawing the path on the image and that may be good enough for now.
I think next week I was supposed to display the path on the image but since that is
already happening enough I may move forward to getting the interface to accept points
for exclusion instead and then revisit displaying the path in a more visually appealing
fashion. Though I think the exclusion points are more important and I think Jonathan
is scheduled for that next week as well so we might be better off if we do that at 
around the same time.

Screenshots in folder for week 5.

Week 6 10/29 - 11/4

Added an interface for choosing points to ignore/not go to on the path. Added buttons
to toggle between choosing the two endpoints and choosing points that should be ignored.
Added a submit button to allow for both steps before path is found. Changed the way the
images are displayed in that they are slightly smaller and next to each other versus
all of them being full width. Added a loading screen because matlab takes almost a minute
to load for me (the actually code we wrote is like maybe a second but loading matlab 
takes a long time - I think it is because my matlab is installed on an SD card). Added
code to handle collecting and displaying the points that should be avoided on the screen
in red. Save the list of points that should be ignored to a file so matlab can access them.
I think Jonathan is doing the re-run without these points thing so I wanted this to be in
before then. Also deletes the old _path.jpg images which is how we are displaying the path
over the images (for now the images are being generated and saved out via matlab). I think
there is still a little bit to be done for choosing which/finding the right image to display
(complicated by re-running the path finding in that we have to remember the original filename).
Re-organized routes.js which handles the swapping out of everything after the ajax request.

Screenshots in folder for week 6. 

Week 7 11/5 - 11/11

Made the matlab path relative to a config file for loading it from the website. Added resetting
the start and end points and resetting the blocked points. Began correcting the way images show
up after the path is generated. Matlab generats only the images that are needed for the path but 
the website had assumed that all images would be regenerated so that is almost fixed. Ran into
a bug with starting points on images that are not the first index. So have been working on debugging
that but that has not been finished. 
